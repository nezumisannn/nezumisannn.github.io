[{"content":"みなさんこんにちは！ すっかりブログの間隔が空いてしまいました、ねずみさん家。です。\n最近コーチングを受け始めました、3/1からなのでもうすぐ2か月というところです。 今回は受けようと思ったきっかけと、コーチングを通して考えたことをまとめてみたいと思います。\nその前にまずはこの場を借りてお礼を。 コーチとしてきぃさんにお世話になっています。 私の拙い言葉を受け入れて味方でいてくれるとてもお優しい方です。 いつもお時間をいただきありがとうございます！今後ともよろしくお願いいたします！ 私もこの貴重な時間を使って成長できるように頑張ります、結果出します＾＾\n(前置き)自分の立ち位置 社内外の人材育成を担うチームのリーダーをやっています。 サブリーダー1人とメンバー2人がいるので計4人のチームです。 サーバの運用保守を行う部署の中のチームとなるのでエンジニアリング + 教育です。\n私単体としては普段はインフラエンジニアとして仕事をしているので AWSを始めたとしたパブリッククラウドを活かしたサーバの設計・構築・運用もやっていますし アラートが発生した際のトラブルシューティングもやっています。\nそこに合わせてチームのミッションが社内外の人材育成になるので 社内の新人メンバーの受け入れと新人研修や 既存メンバー向けにスキルアップを行う研修を実施しつつ リーダーとしてチームメンバーのサポートをしています。\nコーチングを受けようと思ったきっかけ 自分の心境、仕事、人生に向き合う時間を作りたいなと思ったのがきっかけです。 当時は会社の1つの期が終わる直前で、次期に向けた組織体制の発表から始まり 自身としても次の1年で何をやっていくかを考えていた時期でした。\nその中で、今まで私のチームで働いていたメンバーのキャリア選択を見守ることになりました。 仕事を通して成長して新たにリーダーとなった人、やりたいことに挑戦するために部署を異動した人 そして、引き続きチームで頑張ることを決めてくれた人。 皆がそれぞれにとって良い選択をしたと思っています。\nそこで私自身は嬉し涙と悔し涙の両方を流すことになりました。 1つは同じチームで切磋琢磨して成長したことでメンバーの新たなキャリアが生まれたことです。 これはメンバー1人1人が辛いことがありながらも努力を続けた結果だと思います。 今はそれぞれ進んだ道で頑張っています、その姿を見ると本当に嬉しい気持ちが込み上げてきます。 本人達には恥ずかしさもあり言えないですがｗ 「学んだことを次は自分の周りの人に返してあげて」と伝えたことは覚えています。\nもう1つは私自体はあまり成果を出すことができず伸び悩んだ1年となったことです。 1点の曇りもなくやりきったという感覚と求められる成果を出せない不甲斐なさがありました。\n本来人材育成は組織全体でやっていくものですが 目の前のチームメンバーを大事に想いすぎるがあまり視野が狭くなっていました。\nリーダーの役目は与えられたリソース(人・モノ・カネ)を用いて組織の成長に貢献することです。 メンバーと向き合うのは大切なことですがあくまでチームとして成果を出すための手段です。\n今考えると役目と手段を混同していたと思います。 リーダーとして目の前のチームメンバーに時間と想いを込めすぎたことで 求められていた既存メンバーのスキルアップ施策が後回しになってしまっていましたし 想いが強すぎるあまり逆にメンバーと良い関係性を築けませんでした。 「あ、今全然チームがまとまってないな」と感覚でわかりました。 相手のことを考えているつもりが現実は自分のエゴを押し付ける人になっていたとも感じます。\nその中で「視座が高すぎる」「頑張り方を変えた方がいい」「リーダーには向いてないよね」等々\n心にグサッとくるお言葉をいただいたこともありました。\n自分が信じてやってきたことで成果を出せないことが苦しく悔しかったです。\n全てはリーダーとして明確なリーダーシップを持てなかった自分の責任だと思いました。\n何よりも私のチームで人生の時間を使ってくれているメンバーに申し訳ないという気持ちが強く\nもう一度立ち上がろうと決めたのがコーチングを受ける直前です。\n気付いたらコーチングを受けたいと連絡をしていました。\nコーチングってどんなものだろう 流行っているのでChatGPTに聞いてみました。答えはこうです。\nコーチングは、個人やチームが目標を設定し、成果を出すための支援をするプロセスです。コーチングは、個人や組織の目標達成に役立ち、行動変容や成長を促進します。 コーチングは、専門家やリーダーによって提供されることがありますが、一般的には専門的な訓練を受けたコーチによって提供されます。 コーチングのプロセスは、クライアントとコーチの間での対話を通じて行われます。 コーチは、クライアントに対して質問やフィードバックを提供し、クライアントが自己認識を高め、自己成長を促進するのを支援します。 コーチングは、個人的な目標からビジネスの目標まで、さまざまな目的に適用されます。 例えば、ビジネスの場合は、組織のビジョンや戦略の実現、リーダーシップスキルの向上、パフォーマンス改善、チームのコラボレーション、ストレス管理などを目的として行われます。 一方、個人の場合は、キャリアや人生の目標の達成、自己啓発、ストレス管理、人間関係の改善などを目的として行われます。 コーチングは、クライアントに対して高度なサポートを提供することによって、彼らが自己成長や目標達成に向けた行動を促進し、より充実した人生やキャリアを築くのを支援します。\n説明するとしたらこんな感じなんですかねえ、難しい。\nコーチのスタイルにもよると思いますが、私が受けていて感じるのは\n「あなたらしくあなたの人生を歩んでいいんだよ」と背中を押してくれる場所であり\nその時の心境でどんなことを伝えても受け入れて味方でいてくれる力強さがあることです。\nこの土台があるからこそ、遠慮なく自分と向き合うことが出来るんだろうなと思います。\nここで大事なことは答えを教えてくれる場所ではないということです。\n自分がどうしたいのかは本来自分の心の中にしかありません。\n誰かにすがりたくなる時は生きていればありますが\nどれだけ他者の意見を聞いても参考書を読んでも自分の人生の答えは見つかりません。\n自分の意思で自分の心と向き合うことでしか見つけられません。\n会社・地位・人間関係といったしがらみを断ち切り\n人生を歩むために自分がどうしていくかを徹底的に考え抜く場所であるべきです。\nこうして悩んでいる時にたくさんの方が声をかけてくれてアドバイスをいただけます。\n本当に私は人と環境に恵まれていると思います。\nしかし、他者は自分とは違った人生を歩んでいます、自分の人生は自分でしか生きれません。\nそれぞれが別々の人生を歩み、自分の人生を力強く生き続けた結果として\n他者を勇気づけたり助けになったりする、それができる私でありたいと強く思います。\n最初に連絡をしてきぃさんから返事をいただいた時に\n「応援する人にも、応援する人が必要だと思います。」という言葉をいただきました。\nたった一言で悩みや気持ちが軽くなったことを覚えています。\nコーチングで気付いたこと コーチングを受ける時に考えてまとめたことを一部記載すると\n今目指しているのは特定の部署のチームという垣根を越えること。 部署の中のチームという小さなまとまりで満足したくない。 そのまとまりでこの先も続けていくのはキャリアの頭打ちになる 0 → 1のプロダクト開発をしたい(自社サービスを主軸とした起業)　変化と挑戦を恐れず覚悟を持って行動する1年としたい 特に付き合いの長い親友と飲みながら話しているときにエネルギーをもらえる 父と母から始まり、友人や職場の仲間などみんな大切 自分以外の誰かのためにを優先するタイプ この先は自分の人生とキャリアを考えて前に進みたい 今自分と関わっているチームメンバーを時には突き放したり、愛想れない場合は別れたりするタイミングが出てくるような気がする 今まではそれが嫌で申し訳ない気持ちが先行して歩幅を合わせて進んできた 人と場を創る、人材育成の文化を残す 人生の価値は、何を得るかではなく、何を残すかにある 自分自身の想いや価値観に共感してくれる人を増やす 引き出しを増やす 経験してきたことをありのままに伝える 仕事、業務以外での経験を意欲的にやる 世界を見てくる 父と母が誇れる人になりたい 自分と関わった全ての人を幸せにする 改めて時間を取って言葉と文章にしてみるとたくさん想いが出てきます。\n私が他者と関わる上でのスタンスは父と母の影響を受けているなと感じます。 本当に2人に愛されてるなと思います。\n仕事をして成長してようやく分かりましたが最高の親です。\nつい最近も私がLineのメッセージを返さなすぎて生存確認の電話が来ました。\nゴールデンウイーク帰ってくる？という確認でしたが\n元気だったらそれでいい、頑張れよって言ってくれました。\n本当に毎日私のことを気にかけてくれてるんだろうなというのが伝わってきます。\n成人してお酒が飲めるようになってからは父とは軽く飲みに行っています。\n本当に嬉しそうにお酒飲むんですよね、私もいつか気持ちが分かるときが来るでしょうかｗ\n母にはボーナスのときは毎回プレゼントを送っています。\n以前に送ったお財布は風呂敷に包んで大事にしてくれているのを見ましたが普通に使えばいいのにｗ\n2人のすごさは、どれだけ反抗しても常に私の先を見据えて優しさの中に厳しさがあったことです。\n本当の愛は都合の良い優しい言葉だけを投げかけることではありません。\n時に嫌われようとも相手のことを想って厳しいことも伝える。 相手が必ずできるようになると信じて最低限のサポートをする、そしてひたすら待つ。 何があっても最後まで味方でいる。 が大事だと思います、全てを2人は私に長い時間をかけてやってくれました。（今もですが）\n人が何か新しいことを始めようとしたとき、最初から上手くいくわけではありません。 時間がかかるときが山ほどありますし自分1人だけの力では乗り越えられないときがあります。\n結果がでないとき、上手くいっていない期間は目立つし批判もあれば否定もあります。 もうダメだと思うときもあるかもしれません。\nそれでも信じて待ってくれる人がいれば再び立ち上がれるような気がします。 待つということは大変なことです。でも大事なことです。 私も愛を持って周りの人の味方で在り続けたいと強く思います。\n常に心を許せる親友がいることも大事です。 仕事があるので夏季休暇や年末年始にしか会ってはいませんが大切な人達であると思います。 高1のときからずっとなのでもう10年以上経過しましたが 「こいつらとは墓場まで関係続くだろうな」という感覚があります。\n上手くいかないときも、落ち込んだ時も、心の拠り所は誰しも必要になります。 親友と話している時間が私にとってはその拠り所になっています。 感謝しつつ自分も誰かの拠り所でありたい。 次のゴールデンウイークに帰ったときにまた近況報告したいですね。\n現状維持が嫌で常に成長していきたいと思っています。 現状に満足することもないし、小さなまとまりに押さえつけられるのも嫌です。 自分が成長することで周りの人にも影響を与えたい。その人の人生が変わる瞬間を見たい。 成長とは今まで出来なかったことに挑戦すること、いち早く失敗して学ぶことです。 自分だけでなくチームとメンバーも成長出来るようにしたい。 メンバーの面倒を見るという表現は私はあまり好きではありません。 仕事を通してメンバー自身が自分の力で人生を歩めるようになることが大事です。\n人生の目的は自分と関わる全ての人を自分とは違う形で幸せにすること。\nTEDの動画に影響を受けています。 人生の価値は、何を得るかではなく、何を残すかにある。という動画です。\n冒頭の内容が刺さりました。\n皆さんは何のために働いていますか？ 皆さんにとって働く意味って何ですか？ 学校を卒業してこれからは自立しなきゃと会社に入って 早く仕事を覚えようと朝から晩までがむしゃらに働いて いろんな仕事がそのうち出来るようになってきて気付けば部下がいて 人間としても成長しようと一生懸命努力し続けてきた。 でもふと俺ってなんのために働いてるんだろう。 そんな風に思ったことありませんか？\nあるあるです。 私も仕事の目的や意味を見失ったことがあります。 「何のために働いてるんだろう？大して認められもしないのに」と思うことも多々ありました。 それが去年の1年間だったと思います。\n人材育成は未来への投資です、時間がかかるしすぐにリターンがあるわけではありません。 他者の代わりはできないので、私ができることは研修や勉強会などの成長の機会を作ることや 例えば1on1やメンター面談の機会を通して自己効力感を高めることしか出来ません。\nそして長期的な目線が必要です、必要なことだけどすぐに売上に繋がるわけではないので 短期的な目線で考えると「それってやる意味あるの？」って普通に言われます。 でも人は勝手に成長することはないので周りの人のサポートや助言が必ず必要なんです。 それをやらなければどれだけ優秀な人であっても腐ります。\nそんな中でも共に働く仲間やチームメンバーと接するうちに 認められないとかそんなの関係なく、ただ目の前の人と誠意を持って向き合いながら 失敗して上手くいかなくても泥をすくいながら道を切り開く覚悟を持つことが大事だと思いました。 それがリーダーです。道を示せない、責任を持てないリーダーは不要です。\n死ぬときは何も持っていけない、ただ何かを残していくことは出来る。 自分より優れた人を残して静かにこの世を去りたいと思います。\nこの先の人生でやっていきたいこと 仕事 この1年は4月に入社してくれた新人メンバーの育成を妥協なくやりきる。\n次年度には人材育成を担う新たな組織体制を考えていきたいです。\nここは組織全体の意向もあるのでしっかりと議論していきたいですが\n自分としてもチームとしても会社としてもベストな選択になるように会話していきたいです。\n細かいことは省略しますがいろいろ画策してます。\nあと、今の会社と立場で働き続けることが正解ではなくなるタイミングが来るだろうなと思っていて\n将来的には今の会社から独立したい(40歳くらいまでには)\nどの領域で目指していくのかは考え中。エンジニアリングと人材育成両方やりたいとなるとは思う。\nプライベート やりたいことたくさんあります。\n今は仕事の比重が大きく時間を割けないことが多々ありますがたくさん遊びたいです。\nまずはお酒を飲むのが好きなので旅行ついでに全国の地酒を飲みたい。\nジンが好きで今も飲んでるんですが、日本酒にハマってから日本全国に行きたいと思うように。\n沖縄と静岡もう1回行きたいです。特に静岡のさわやかのハンバーグは美味しすぎました。\n福岡は明太子目当て、長野は真澄という日本酒目当てで行きたいです。\n最高のリーダーになるためにプライベートでも勉強したいです。\n以下の2つの本を読んでます。良書の予感です。\n若手育成の教科書 エンジニアのためのマネジメント入門 本だけ読んでると飽きちゃうので手も動かしたいです。\nインフラだけでなくアプリケーション開発にも手を伸ばしたいですね。\nバックエンド側のコードは調べれば理解して書けますが\nフロントエンド側があまりに理解できなさすぎるので\nNext.jsでコードを書いてVercelでデプロイできるところまでやろうとしています。\n本サイトがHugoの静的サイトなのでリプレイスするのもありかもしれない。\nあとは、オンラインゲーム(PSO2NGS)の総プレイ時間10000時間を目指します\n(今6500時間くらい？忘れた)\nまとめ 人生は一度きりなので悔いなく生きたい、それだけです。\n久々に長文書いたら燃え尽きて逆にまとめが出てこずｗ（ｼｶﾀﾅｲ\n","date":"2023-04-23T00:00:00Z","image":"https://nezumisannn.io/blog/thinking-myself-work-life-coaching/cover_hu6307248181568134095.jpg","permalink":"https://nezumisannn.io/blog/thinking-myself-work-life-coaching/","title":"コーチングを通して考える自分と仕事と人生"},{"content":"記述したコード https://github.com/nezumisannn/packer-hcl2-sample.git Packerとは HashiCorpが開発しているCLIツール マルチクラウドに対応したゴールデンイメージの作成ができる 設定ファイルの書式はJson or HCL2 バージョン1.5からHCL2に対応した 参照 https://packer.io/guides/hcl/ https://packer.io/docs/builders/docker.html https://packer.io/docs/provisioners/shell.html HCL2で記述するメリット TerraformもHCL2で記述するため共通の書式を利用できる 設定ファイルを用途に合わせて分割できる コードの途中でコメントを追加できる Packerのバージョン 1 2 $ packer version Packer v1.5.5 設定ファイル一覧 1 2 3 4 5 6 $ tree . ├── README.md ├── build.pkr.hcl ├── sources.pkr.hcl └── variable.pkr.hcl variable.pkr.hcl variableを利用してコード内で利用する変数を定義する sources.pkr.hcl ビルド時に利用するイメージを利用する Json形式で記述する際のBuildersに相当する build.pkr.hcl ビルドを行う際の処理を記述する sourcesでsources.pkr.hclに書いた設定を複数読み込むことが可能 その他Jsonで記述する際と同様にprovisionerでShellの他、Ansibleなどと連携可能 ファイル内容 variable.pkr.hcl 1 2 3 4 5 6 7 8 9 variable \u0026#34;image_nginx\u0026#34; { type = string default = \u0026#34;nginx:latest\u0026#34; } variable \u0026#34;image_php-fpm\u0026#34; { type = string default = \u0026#34;php:7.3-fpm\u0026#34; } sources.pkr.hcl 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 /* { \u0026#34;type\u0026#34;: \u0026#34;docker\u0026#34;, \u0026#34;image\u0026#34;: \u0026#34;nginx:latest\u0026#34;, \u0026#34;commit\u0026#34;: true } */ source \u0026#34;docker\u0026#34; \u0026#34;nginx\u0026#34; { image = var.image_nginx commit = true } /* { \u0026#34;type\u0026#34;: \u0026#34;docker\u0026#34;, \u0026#34;image\u0026#34;: \u0026#34;php:7.3-fpm\u0026#34;, \u0026#34;commit\u0026#34;: true } */ source \u0026#34;docker\u0026#34; \u0026#34;php-fpm\u0026#34; { image = var.image_php-fpm commit = true } build.pkr.hcl 1 2 3 4 5 6 7 8 9 10 11 12 build { sources = [ \u0026#34;source.docker.nginx\u0026#34;, \u0026#34;source.docker.php-fpm\u0026#34; ] provisioner \u0026#34;shell\u0026#34; { inline = [ \u0026#34;hostname \u0026amp;\u0026amp; cat /etc/os-release\u0026#34; ] } } ビルド実行 1 $ packer build ./ 現時点での問題 packer validateが使えない https://github.com/hashicorp/packer/issues/8538 今後のアップデートに期待 ","date":"2020-03-29T00:00:00Z","image":"https://nezumisannn.io/blog/packer-hcl2-sample/cover_hu6307248181568134095.jpg","permalink":"https://nezumisannn.io/blog/packer-hcl2-sample/","title":"PACKERがHCL2をサポートしたのでDOCKERイメージを作成してみる"},{"content":"概要 エンジニアリングチームを中長期的に成長させていくことを目的とした新しいポジション 責任 エンジニアリングチームの生産性向上と成長の最大化 目標 エンジニアリングチームのオートスケーリング 組織のビジネスに対する間接的な貢献 成長の定義 以下の技術面・精神面の2つを継続してチーム及び個人で磨いていくことを「成長」とする ビジネスの技術的要件を達成するために必要なスキルセット 困難な課題に直面した場合でも自走できるエンジニアマインド Growth Architectは上記成長を自責と捉えて支援していく役割を担う エンジニアリングチームの定義 お客様やサービスと徹底的に向き合い、エンジニアリング領域における技術的なソリューションを提供する集団 Growth Architectは中立的な立場で物事を把握するため基本的にエンジニアリングチームには属さずに独立して活動する ただし、エンジニアリングチームのリソースが不足している場合は積極的に支援する トランプにおけるジョーカーのような役割を果たす 現状の課題と理想 課題 組織のビジネスの成長とエンジニアリングチームの成長が反比例している ビジネスの技術的要件がチームメンバーのスキルセットを超えている 新規案件の対応に追われるようになり、一定のスキルセットを持ったメンバーに負荷が集中する 現組織や業務における課題を改善していくための時間を確保できず技術的負債が増加する 理想 組織のビジネスの成長に応じてエンジニアリングチームもスケールアップできる チームメンバーを増やすことも必要だが単に増やせば良いというわけではない チームと個人が成長し、チームメンバー1人に対して対応できる課題の数と幅が増えていくことが理想 この対応できる課題の数と幅を継続的に増やしていくことをGrowth Architectでは「チューニング」と呼ぶ 一定のメンバーに集中した負荷を分散できる 負荷が集中しているということは業務が属人化しているということ 属人化は悪ではないが、過度な属人化はメンバーを疲弊させる 汎用的かつどのメンバーでも対応できる範疇の業務は自動化していくことが理想 Growth Architectでは業務の自動化や効率化の面における技術的な支援を行うことが求められる 現組織や業務における課題に向き合い改善していくことができる 課題がない組織は存在しないが、エンジニアリングチームの成長が追いつかないため後回しになりがち Growth Architectではエンジニアリングチームと連携し、現状の課題の把握やソリューションを提供する役割を担う 組織の事業継続において長年受け継がれてきたフローを変えていくことも厭わない 具体的な業務内容 育成 エンジニアリングチームに属するメンバーの育成 メンバーとは以下の3つの節目において長期的に関わっていく 出会い 研修内容の決定 新人研修の実施とフォローアップ 未経験からエンジニアの卵になってもらう 自立 エンジニアリングチームへの配属 OJTの実施と自身が持っているノウハウの継承 OJT実施後のフィードバック 自走できる経験を積ませて卵の殻を破ってもらう 継承 Growth Architectからの継承ではない 自走できるようになったメンバーからさらにその後輩へノウハウを継承してもらう Growth Architectの使命は自身をも超えていく人材を育成すること 登壇 社内勉強会の定期的な開催 外部の勉強会やイベントへの積極的な登壇 組織のネームバリューの向上 Growth Architect自身の成長のため 上記の活動を行うことで、エンジニアリング組織において必要不可欠なアウトプットを行う新しい組織文化を形成する 最新技術の検証及び導入 エンジニアリングチームのスキルセットを超えてしまっている技術領域の検証及び導入を支援する 組織のR＆DのRの部分を担い、エンジニアリングチームの業務に導入するための運用フローの確立と啓蒙活動を行う ","date":"2019-12-29T00:00:00Z","image":"https://nezumisannn.io/blog/growth-architect/cover_hu6307248181568134095.jpg","permalink":"https://nezumisannn.io/blog/growth-architect/","title":"GROWTH ARCHITECT(グロースアーキテクト)というポジションを考えてみた"},{"content":"みなさんおはこんばんにちは！\nインフラエンジニアのねずみさん家です。\nタイトル通りですが\n私は勉強会やセミナーでの登壇を業務とは別で継続しています。\n現在も会社の後押しがあり、かなり自由にやらせてもらってますが\n登壇を通して新たな目標が出来たのでまとめてみたいと思います。\n下記に今までの登壇履歴を記載していますのでよければ見てみてください↓\nhttps://nezumisannn.io/about/\n会社における新しい文化を築きたい これが今の目標です。\n始めた当初はモチベーションを失っている自分を変えるのが目標でした。\n丁度仕事に慣れてきたときだったんですが\n状況に満足して新しい挑戦をしなくなった結果\n毎日同じことの繰り返しでつまらなくなっていたんですよね。\nそこから約1年、月に1～2ペースで登壇をしてきましたが\n自身の活動に共感してくれる人が出てきました。\n私の後輩なんですけどね(笑)\nその結果、今まで社内では根付いていなかった新しい試みを\n後輩自らが提案して実践してくれるようになりました。\nつい最近は「もくもく会」という名のサーバー構築勉強会を開きました。\nAWSのVPCを構築してみるという基礎的な内容でしたが\n・後輩自らが提案して実践してくれたこと\n・他のメンバーも積極的に参加してくれたこと\nが私からするととても嬉しかったですし\n会社にとっても良い流れになると思うんです。\n個々のメンバーの技術レベルが上がるのはもちろんのこと\nまた別のメンバーがこの活動に共感して新しいアイデアを出してくれるかもしれません。\nこのもくもく会、当然ですが会社から指示があって開いたものではありません。\n社内のメンバーが自らの意思で「開きたい！」「参加したい！」と思ったから実現したものです。\n文化を築くということはこのような「共感の連鎖」の先で成し遂げられるものではないでしょうか。\n一人でできることはやっぱり限られていますから\nみんなで協力して前向きに取り組んでいく必要があります。\nだからこそ自らが誰よりも前に立って登壇を継続することで\n私と関わる人の成長や行動の後押しをする立場で居続けたいなと節に思っています。\nこれから 1/29にDockerをテーマとした勉強会に登壇します。\nよろしければ見に来てください。\nhttps://beyondjapan.connpass.com/event/160565/\n2月もいくつか予定があるので、また後日お知らせしますね。\n","date":"2019-12-25T00:00:00Z","image":"https://nezumisannn.io/blog/build-culture/cover_hu6307248181568134095.jpg","permalink":"https://nezumisannn.io/blog/build-culture/","title":"私が勉強会やセミナーで登壇するのは、会社における新しい文化を築きたいから"},{"content":"みなさんこんにちは！\nインフラエンジニアのねずみさん家です。\n今回はTerraformのModuleを作成してAWSのVPCを作成します。\n初めての投稿なので初回セットアップの部分も書いてみたいと思います。\nTerraformは非常に便利なツールなので是非利用してみてくださいー。\nTerraformのインストール Macを利用していてbrewが利用できる方は以下でインストール可能です。\nbrew install terraform TerraformはGolangで開発されているため\nこちらからバイナリファイルをダウンロードすることも可能です。\nインストールできたらバージョンを確認してみましょう。\nterraform version 今回はバージョン0.12.18を利用します。\n古いバージョンの0.11ではサポートされていない記述も含まれているためご注意ください。\nクレデンシャルの用意 Terraformの処理でAWSのAPIを実行することになるためクレデンシャルを用意します。\n用意したらTerraformから読み込むために環境変数に登録します。\n変数名の頭にTF_VARとつけることでTerraformから読み込むことができるようになります。\nexport TF_VAR_access_key=[Access Key] export TF_VAR_secret_key=[Secret Key] export TF_VAR_role_arn=[Role ARN] terraform.tfvarsに記載しても良いですが\nGitに誤って上げてしまって不正アクセスを受けたという記事が散見されるため\n基本的にはファイルに直接認証情報を記載しないのが良いと思います。\nまた今回はTerraformからAssumeRoleを行うため\n適切な権限を付与したIAMロールも用意しておきます。\nHCLの記述 ここからHCLを記載していきます。\nHCLはHashicorp Configuration Languageの略で\nTerraformのコードを書いていくときに利用する独自言語を指します。\n今回記載したVPCのモジュールの階層構造は以下のようになっています。\n. ├── network │ └── vpc │ ├── main.tf │ ├── outputs.tf │ └── variables.tf ├── network.tf ├── outputs.tf ├── provider.tf ├── terraform.tfstate ├── terraform.tfstate.backup └── variables.tf tfstateをローカルで管理していますが\n実際に使う場合はbackendでS3などで管理するようにするのが定石です。\nまずはprovider.tfを書いていきましょう。\nprovider \u0026quot;aws\u0026quot; { access_key = var.access_key secret_key = var.secret_key region = var.region assume_role { role_arn = var.role_arn } } providerではAWSにアクセスするために必要な認証情報を指定します。\nTerraformではvariableで変数を定義してvar.変数名で変数の値を取得することが可能です。\nvariables.tfの中身を見てみましょう。\nvariable \u0026quot;access_key\u0026quot; { description = \u0026quot;AWS Access Key\u0026quot; } variable \u0026quot;secret_key\u0026quot; { description = \u0026quot;AWS Secret Key\u0026quot; } variable \u0026quot;role_arn\u0026quot; { description = \u0026quot;AWS Role ARN for Assume Role\u0026quot; } variable \u0026quot;region\u0026quot; { description = \u0026quot;AWS Region\u0026quot; default = \u0026quot;ap-northeast-1\u0026quot; } variableで変数を定義しています。\nこの変数には先ほど環境変数に指定した値が自動で代入されます。\nここまで書けたらいよいよVPCの作成部分を書いていきましょう。\nnetwork.tfの中身を見てみます。\n1 2 3 4 5 6 7 8 9 10 module \u0026#34;vpc\u0026#34; { source = \u0026#34;./network/vpc\u0026#34; vpc_config = { name = \u0026#34;example\u0026#34; cidr_block = \u0026#34;10.0.0.0/16\u0026#34; enable_dns_support = true enable_dns_hostnames = true } } sourceに読み込むModuleの処理を記載した.tfが存在するディレクトリの相対パスを記載します。\nまた、Module側で必要な値を変数化するため\nvpc_configという名前で変数を作成してModule側に渡しています。\nModule側を見ていきます、まずはvariables.tfから見ていきましょう。\nここでnetwork.tfから渡された変数を受け取っています。\n1 2 3 4 5 6 7 8 variable \u0026#34;vpc_config\u0026#34; { type = object({ name = string cidr_block = string enable_dns_support = bool enable_dns_hostnames = bool }) } Terraform0.12からobjectという便利なタイプが追加されています。\n0.11まではmap型でも同じ型の値しか格納することができませんでしたが\nobjectを利用するとstringとboolといった異なる型の値を同時に扱うことができます。\n次にmain.tfを見ていきましょう。\nここでVPCを作成するためにaws_vpcリソースを記述しています。\n1 2 3 4 5 6 7 8 9 resource \u0026#34;aws_vpc\u0026#34; \u0026#34;this\u0026#34; { cidr_block = var.vpc_config.cidr_block enable_dns_support = var.vpc_config.enable_dns_support enable_dns_hostnames = var.vpc_config.enable_dns_hostnames tags = { Name = var.vpc_config.name } } ここでも値が変数化されていますが\nvpc_configという名前で呼び出し側から値を受け取っているため\nvar.変数名.オブジェクトキーというように指定すると値を参照することができます。\nここまでくればもう一息です。\n最後にリソースが作成された後の情報を参照できるようにoutputを書いておきましょう。\noutputs.tfを見ていきます。\n1 2 3 output \u0026#34;vpc\u0026#34; { value = aws_vpc.this } ここも0.12から追加された記述を利用しています。\n0.11までは1つのoutputに対して1つの値しか扱うことができませんでしたが\n0.12からは複数の値を扱うことができるようになります。\naws_vpc.リソース名とするとvpc_idやcidr_blockなどの複数の値がmap型でまとめて出力されます。\nここまで書いたらVPCを作成することが可能です。 まずはドライランを実行してみましょう。\n1 terraform plan 成功すると以下のように結果が返ってきます。\nエラーが出た場合はHCLに記述ミスがある可能性があるので書き直しましょう。\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 Refreshing Terraform state in-memory prior to plan... The refreshed state will be used to calculate this plan, but will not be persisted to local or remote state storage. ------------------------------------------------------------------------ An execution plan has been generated and is shown below. Resource actions are indicated with the following symbols: + create Terraform will perform the following actions: # module.vpc.aws_vpc.this will be created + resource \u0026#34;aws_vpc\u0026#34; \u0026#34;this\u0026#34; { + arn = (known after apply) + assign_generated_ipv6_cidr_block = false + cidr_block = \u0026#34;10.0.0.0/16\u0026#34; + default_network_acl_id = (known after apply) + default_route_table_id = (known after apply) + default_security_group_id = (known after apply) + dhcp_options_id = (known after apply) + enable_classiclink = (known after apply) + enable_classiclink_dns_support = (known after apply) + enable_dns_hostnames = true + enable_dns_support = true + id = (known after apply) + instance_tenancy = \u0026#34;default\u0026#34; + ipv6_association_id = (known after apply) + ipv6_cidr_block = (known after apply) ドライランは問題ないようですので実際に反映してみましょう。\n1 terraform apply 反映されたら作成されたVPCの情報を参照したいため\nModule側で指定したoutputを呼び出し側で受け取り内容を確認します。\n呼び出し元のoutputs.tfを確認します。\n1 2 3 output \u0026#34;vpc_id\u0026#34; { value = module.vpc.vpc.id } ここで記述するのはmodule.モジュール名.参照する値となり\n今回はVPCのIDを確認したいためmodule.vpc.vpc.idとなります。\n記述したら再度terraform applyを実行します。\n1 2 3 4 5 Apply complete! Resources: 0 added, 0 changed, 0 destroyed. Outputs: vpc_id = vpc-XXXXXXXXXXXXXXXXX 正常に実行されるとこのようにVPCのIDを確認することができます。\nこれでVPCのモジュールは完成です。\n作成したリソースが不要になったら以下のコマンドで消してくださいね。\n1 terraform destroy 次回 VPCを作成したので次はサブネットの作成を行います。\nまた後日記事にまとめるのでお楽しみにー！！\n","date":"2019-12-14T00:00:00Z","image":"https://nezumisannn.io/blog/terraform-module-vpc/cover_hu6307248181568134095.jpg","permalink":"https://nezumisannn.io/blog/terraform-module-vpc/","title":"TERRAFORMのMODULEを作成する(VPC)"},{"content":"みなさんこんにちは！\nインフラエンジニアのねずみさん家です。\n突然ですがブログを開設しました。ねずみさん家。の日常です(笑)\nこのブログは「Hugo」と「Github Pages」で稼働しています。\nWordPressが最初に頭に思い浮かびましたが\nコンテンツとして自己紹介とブログ記事しかない小規模なサイトなので\n「別に動的コンテンツじゃなくてもいいじゃん！」ということで勢いで作りました（\nこのブログで書くこと 学習したスキル 技術的に躓いたこと 勉強会・セミナーの参加レポート プライベートの日常 などなど、私自身が書きたいことを徐々に書いていきたいと思います！\nTwitterで記事を随時宣伝していくつもりなので気になった方は是非ご覧ください！\nブログを開設した訳 唐突に何故ブログを開設したのかをまとめておくと\n「所属企業とは別で、個人としてのアウトプットを行っていきたい」と思ったからです。\n各個人で意見は異なると思いますが、私自身が仕事をする上で\n「どの企業に属しているか」よりも「個人としてどんなスキルを持っていて何が出来るのか」\nということの方が重視されていると強く感じています。\n「学歴とか過去の経歴」が当てにならない時代になってきているのではないでしょうか。\nそんな中で、「自分という個人」を売り込み市場価値を上げるにはどうすれば良いのか。\nそう考えたときに行き着いたのが「考えやスキルをブログでアウトプットする」ということでした。\n思ったより単純明快ですね(笑)\n併せて、これは以前から既に実践しているのですが\nブログ以外の活動として「勉強会やセミナーに登壇する」ということも続けています。\n登壇履歴はこちらから見れます！\nhttps://github.com/nezumisannn/my-profile\n勉強会やセミナーに登壇してアウトプットをすることで人脈を広げる 個人ブログで文章として発信する この2点を今後継続することでアウトプットの頻度を上げていきたいと思います！\n","date":"2019-08-26T00:00:00Z","image":"https://nezumisannn.io/blog/first-post/cover_hu6307248181568134095.jpg","permalink":"https://nezumisannn.io/blog/first-post/","title":"ブログを開設しました！"}]